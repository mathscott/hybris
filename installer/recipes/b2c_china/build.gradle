def config = {
    localProperties {
        property 'commerceservices.default.desktop.ui.experience', 'responsive'
        property 'csrf.allowed.url.patterns', '/[^/]+(/[^?]*)+(sop/response)$,/[^/]+(/[^?]*)+(merchant_callback)$,/[^/]+(/[^?]*)+(hop/response)$,/[^/]+(/[^?]*)+(language)$,/[^/]+(/[^?]*)+(currency)$,/[^/]+(/[^?]*)+(alipay)+/(.)*$,/[^/]+(/[^?]*)+(wechat)+/(.)*$'
		property 'task.polling.interval.min', '0'
	}

    extensions {

    	extName 'mcc'
	    extName 'adaptivesearchsolr'
        extName 'adaptivesearchbackoffice'
        extName 'adaptivesearchsamplesaddon'
        extName 'adaptivesearchwebservices'
        extName 'commerceservicesbackoffice'
	    extName 'solrfacetsearchbackoffice'
	    extName 'solrserver'
	    extName 'yacceleratorcockpits'
	    extName 'yacceleratorinitialdata'
	    extName 'yacceleratorfulfilmentprocess'
	    extName 'yacceleratorstorefront'
	    extName 'ycommercewebservices'
	    extName 'ycommercewebservicestest'

	    extName 'electronicsstore'

	    extName 'acceleratorwebservicesaddon'
	    extName 'orderselfserviceaddon'

	    extName 'customersupportbackoffice'
	    extName 'customerticketingaddon'
	    extName 'commerceorgsamplesaddon'

	    extName 'rulebuilderbackoffice'
	    extName 'couponbackoffice'
	    extName 'droolsruleengineservices'
	    extName 'couponfacades'
	    extName 'promotionenginesamplesaddon'

	    extName 'cmswebservices'
	    extName 'smarteditwebservices'
	    extName 'cmssmarteditwebservices'
	    extName 'permissionswebservices'
	    extName 'smarteditaddon'
	    extName 'cmssmartedit'
		extName 'cmsbackoffice'

	    extName 'previewpersonalizationweb'
	    extName 'personalizationcmsweb'
	    extName 'personalizationsmartedit'
        extName 'personalizationpromotionssmartedit'
	    extName 'personalizationsampledataaddon'
	    extName 'personalizationpromotions'
	    extName 'personalizationpromotionsweb'
	    extName 'personalizationservicesbackoffice'
	    extName 'personalizationpromotionsbackoffice'
	    extName 'personalizationcmsbackoffice'
		extName 'personalizationsearchbackoffice'
		extName 'personalizationsearchsmartedit'
		extName 'personalizationsearchweb'
		extName 'personalizationsearchsamplesaddon'

	    extName 'textfieldconfiguratortemplatebackoffice'
	    extName 'textfieldconfiguratortemplateaddon'
	    extName 'assistedservicestorefront'
		extName 'assistedservicewebservices'
	    extName 'assistedservicepromotionaddon'

	    extName 'assistedserviceatddtests'
	    extName 'promotionengineatddtests'
	    extName 'textfieldconfiguratortemplateatddtests'

		extName 'pcmbackoffice'

	    extName 'chineseprofileaddon'
        extName 'chineselogisticaddon'
        extName 'chineselogisticbackoffice'

        extName 'chinesepaymentaddon'
        extName 'chinesetaxinvoiceaddon'
        extName 'chinesetaxinvoicebackoffice'
        extName 'chinesepspalipaymock'
        extName 'chinesepspalipaysamplesaddon'
        extName 'chinesepspalipaysbackoffice'
        extName 'chinesestoreaddon'
        extName 'verticalnavigationaddon'

    	extName 'chineseaddressaddon'
        extName 'chineseaddressbackoffice'

        extName 'chinesepspwechatpaymentaddon'
        extName 'chinesepspwechatpaysamplesaddon'
        extName 'chinesepspwechatpaysbackoffice'

        extName 'consignmenttrackingaddon'
        extName 'consignmenttrackingmock'
        extName 'consignmenttrackingbackoffice'

        extName 'notificationaddon'
        extName 'customerinterestsaddon'
        extName 'stocknotificationaddon'
        extName 'chineseproductsharingaddon'

        extName 'selectivecartaddon'

        extName 'customercouponaddon'
		extName 'customercouponsamplesaddon'
		extName 'customercouponbackoffice'

		extName 'timedaccesspromotionengineaddon'
		extName 'timedaccesspromotionenginesamplesaddon'
		extName 'timedaccesspromotionenginebackoffice'
		extName 'messagecentercsoccaddon'
		extName 'consignmenttrackingoccaddon'
		extName 'customerinterestsoccaddon'
		extName 'customercouponoccaddon'
		extName 'notificationoccaddon'
		extName 'stocknotificationoccaddon'	
    }
}

task setup << {
    apply plugin: 'installer-platform-plugin'
    apply plugin: 'installer-addon-plugin'
    def pl = platform(config)
    pl.setup()

    pl.project.addons {
    	names "chineseprofileaddon,chineselogisticaddon,chinesepaymentaddon,chinesetaxinvoiceaddon,chinesepspalipaysamplesaddon,chinesestoreaddon,verticalnavigationaddon,chineseaddressaddon,chinesepspwechatpaymentaddon,chinesepspwechatpaysamplesaddon,consignmenttrackingaddon,notificationaddon,customerinterestsaddon,stocknotificationaddon,chineseproductsharingaddon,selectivecartaddon,customercouponaddon,customercouponsamplesaddon,commerceorgsamplesaddon,promotionenginesamplesaddon,smarteditaddon,textfieldconfiguratortemplateaddon,assistedservicestorefront,assistedservicepromotionaddon,customerticketingaddon,orderselfserviceaddon,adaptivesearchsamplesaddon,timedaccesspromotionengineaddon,timedaccesspromotionenginesamplesaddon,personalizationsearchsamplesaddon"
        template "yacceleratorstorefront"
        storeFronts "yacceleratorstorefront"
        platform pl
    }

    pl.project.addons {
        names "acceleratorwebservicesaddon,messagecentercsoccaddon,consignmenttrackingoccaddon,customerinterestsoccaddon,customercouponoccaddon,notificationoccaddon,stocknotificationoccaddon"
        template "ycommercewebservices"
        storeFronts "ycommercewebservices"
        platform pl
    }
}

task initialize << {
    apply plugin: 'installer-platform-plugin'
    def pl = platform(config)
    pl.build()
    pl.initialize()
}


task start << {
    apply plugin: 'installer-platform-plugin'
    def pl = platform(config)
    pl.start()
}
