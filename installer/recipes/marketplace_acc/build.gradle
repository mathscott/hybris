def config = {
    localProperties {
        property 'googleApiKey', ''
    }

    extensions {
        extName 'mcc'
        extName 'adaptivesearchsolr'
        extName 'adaptivesearchbackoffice'
        extName 'adaptivesearchwebservices'
        extName 'adaptivesearchsamplesaddon'
        extName 'commerceservicesbackoffice'
        extName 'solrfacetsearchbackoffice'
        extName 'solrserver'
        extName 'yacceleratorcockpits'
        extName 'yacceleratorinitialdata'
        extName 'yacceleratorfulfilmentprocess'
        extName 'yacceleratorstorefront'
        extName 'yacceleratormarketplaceintegration'
        extName 'ycommercewebservices'
        extName 'ycommercewebservicestest'

        extName 'acceleratorwebservicesaddon'
        extName 'orderselfserviceaddon'

        extName 'customersupportbackoffice'
        extName 'customerticketingaddon'
        extName 'commerceorgsamplesaddon'

        extName 'rulebuilderbackoffice'
        extName 'couponbackoffice'
        extName 'droolsruleengineservices'
        extName 'couponfacades'
        extName 'promotionenginesamplesaddon'
		extName 'marketplacepromotionenginesamplesaddon'

        extName 'cmswebservices'
        extName 'smarteditwebservices'
        extName 'permissionswebservices'
        extName 'smarteditaddon'
        extName 'cmssmartedit'
		extName 'cmsbackoffice'
        extName 'cmssmarteditwebservices'
		extName 'previewwebservices'

        extName 'previewpersonalizationweb'
        extName 'personalizationcmsweb'
        extName 'personalizationsmartedit'
        extName 'personalizationpromotionssmartedit'
        extName 'personalizationsampledataaddon'
        extName 'personalizationsearchbackoffice'
        extName 'personalizationsearchsmartedit'
        extName 'personalizationsearchweb'
        extName 'personalizationsearchsamplesaddon'

        extName 'textfieldconfiguratortemplatebackoffice'
        extName 'textfieldconfiguratortemplateaddon'
        extName 'assistedservicestorefront'
		extName 'assistedservicewebservices'

        extName 'assistedserviceatddtests'
        extName 'promotionengineatddtests'
        extName 'textfieldconfiguratortemplateatddtests'

        extName 'consignmenttrackingaddon'
        extName 'consignmenttrackingmock'
        extName 'consignmenttrackingbackoffice'

        extName 'marketplaceaddon'
        extName 'marketplaceoccaddon'
        extName 'marketplacebackofficesamplesaddon'
        extName 'marketplacebackoffice'
        extName 'marketplacestore'

		extName 'notificationaddon'
        extName 'customerinterestsaddon'
        extName 'stocknotificationaddon'

        extName 'pcmbackoffice'

        extName 'consignmenttrackingoccaddon'
		extName 'customerinterestsoccaddon'
		extName 'notificationoccaddon'
		extName 'stocknotificationoccaddon'
    }
}

task setup << {
    apply plugin: 'installer-platform-plugin'
    apply plugin: 'installer-addon-plugin'
    def pl = platform(config)
    pl.setup()

    pl.project.addons {
        names "commerceorgsamplesaddon,promotionenginesamplesaddon,marketplacepromotionenginesamplesaddon,smarteditaddon,textfieldconfiguratortemplateaddon,assistedservicestorefront,customerticketingaddon,orderselfserviceaddon,consignmenttrackingaddon,marketplaceaddon,marketplacebackofficesamplesaddon,notificationaddon,customerinterestsaddon,stocknotificationaddon,adaptivesearchsamplesaddon,personalizationsearchsamplesaddon"
        template "yacceleratorstorefront"
        storeFronts "yacceleratorstorefront"
        platform pl
    }

    pl.project.addons {
        names "acceleratorwebservicesaddon,marketplaceoccaddon,consignmenttrackingoccaddon,customerinterestsoccaddon,notificationoccaddon,stocknotificationoccaddon"
        template "ycommercewebservices"
        storeFronts "ycommercewebservices"
        platform pl
    }
}

task initialize << {
    apply plugin: 'installer-platform-plugin'
    def pl = platform(config)
    pl.build()
    pl.initialize()
}


task start << {
    apply plugin: 'installer-platform-plugin'
    def pl = platform(config)
    pl.start()
}
